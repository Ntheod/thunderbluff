plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'com.ted'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile( 'io.jsonwebtoken:jjwt:0.9.0')
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
}

def myWebAppDir = "$projectDir/src/main/myWebApp"
sourceSets {
    main {
        resources {
            srcDirs = ["$myWebAppDir/dist/myWebApp", "$projectDir/src/main/resources"]
        }
    }
}

processResources {
    dependsOn "buildAngular"

    from ("$myWebAppDir/dist/myWebApp") {
        into 'public'
    }
}

//def angBuildDir = "$projectDir/build/www"
task cleanAngular(type: Delete) {
    delete "$myWebAppDir/dist/myWebApp"
//    delete "$angBuildDir"
}

task buildAngular(type:Exec) {
    // installAngular should be run prior to this task
    dependsOn "cleanAngular"
    dependsOn "installAngular"
    workingDir "$myWebAppDir"
    inputs.dir "$myWebAppDir"
    // Add task to the standard build group
    group = BasePlugin.BUILD_GROUP
    // ng doesn't exist as a file in windows -> ng.cmd
    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
        commandLine "ng.cmd", "build"
    } else {
        commandLine "ng", "build"
    }
}

task installAngular(type:Exec) {
    workingDir "$myWebAppDir"
    inputs.dir "$myWebAppDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
        commandLine "npm.cmd", "install"
    } else {
        commandLine "npm", "install"
    }
}